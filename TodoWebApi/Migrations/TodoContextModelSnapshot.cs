// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testasp.Data;

namespace testasp.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085");

            modelBuilder.Entity("testasp.Data.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("password");

                    b.Property<string>("username");

                    b.HasKey("id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("testasp.Data.TodoItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TodoListId");

                    b.Property<string>("createDate");

                    b.Property<string>("deadline");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.HasIndex("TodoListId");

                    b.ToTable("TodoItem");
                });

            modelBuilder.Entity("testasp.Data.TodoList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.HasIndex("AccountId");

                    b.ToTable("TodoList");
                });

            modelBuilder.Entity("testasp.Data.TodoItem", b =>
                {
                    b.HasOne("testasp.Data.TodoList", "todoList")
                        .WithMany("items")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("testasp.Data.TodoList", b =>
                {
                    b.HasOne("testasp.Data.Account", "account")
                        .WithMany("lists")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
